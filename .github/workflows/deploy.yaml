name: Deploy Go S3 SAM Notification Application

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-west-1
  GO_VERSION: '1.21'
  CFN_EXEC_ROLE:  arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/sam-cfn
  S3_BUCKET: wk8-eda

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: |
          go mod download
          go mod verify
  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.CFN_EXEC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM build (Go bootstrap)
        run: sam build --template-file template.yaml --use-container

      - name: Package and deploy SAM to dev
        run: |
          sam deploy --config-env dev \
            --parameter-overrides Environment=dev NotificationEmail=${{ secrets.DEV_EMAIL }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

  deploy-prod:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.CFN_EXEC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM build (Go bootstrap)
        run: sam build --template-file template.yaml --use-container

      - name: Package and deploy SAM to prod
        run: |      
          sam deploy --config-env prod \
            --parameter-overrides Environment=prod NotificationEmail=${{ secrets.PROD_EMAIL }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset